/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.gestioninventariomercado;

import java.awt.Color;
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
/**
 *
 * @author diazv
 */
public class VentanaBuscarProducto extends javax.swing.JFrame {

    /**
     * Creates new form BuscarProducto
     */
   private Tienda tienda;
   private int codigoBuscado;
    public VentanaBuscarProducto(Tienda tienda) {
        initComponents();
        this.tienda = tienda;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBuscado = new javax.swing.JTable();
        titulo = new javax.swing.JLabel();
        textoCodigo = new javax.swing.JLabel();
        inputCodigo = new javax.swing.JTextField();
        botonBuscar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        textoError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaBuscado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seccion", "Codigo", "Nombre", "Cantidad", "Vendedor", "PrecioCompra", "Fecha Caducidad", "Cantidad Por lote"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaBuscado);

        titulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Buscar Producto y/o Modificarlo");

        textoCodigo.setText("Codigo Producto:");

        inputCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCodigoActionPerformed(evt);
            }
        });

        botonBuscar.setText("Buscar");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        botonModificar.setText("Confirmar Modificacion");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });

        textoError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textoError.setText(".");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(botonSalir)
                        .addGap(180, 180, 180)
                        .addComponent(botonModificar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addComponent(botonBuscar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textoError, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textoCodigo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoCodigo)
                    .addComponent(inputCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botonBuscar)
                .addGap(4, 4, 4)
                .addComponent(textoError)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonSalir)
                    .addComponent(botonModificar))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCodigoActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
    DefaultTableModel modelo = (DefaultTableModel) this.tablaBuscado.getModel();

    if (modelo.getRowCount() == 0) {
        textoError.setText("No hay producto para modificar.");
        textoError.setForeground(Color.red);
        return;
    }

    // Obtenemos los valores de la tabla
    String nuevaSeccion = modelo.getValueAt(0, 0).toString();
    String codigoStr = modelo.getValueAt(0, 1).toString();
    String nuevoNombre = modelo.getValueAt(0, 2).toString();
    String cantidadStr = modelo.getValueAt(0, 3).toString();
    String nuevoVendedor = modelo.getValueAt(0, 4).toString();
    String precioStr = modelo.getValueAt(0, 5).toString();
    String fechaStr = modelo.getValueAt(0, 6).toString();
    String cantidadLoteStr = modelo.getValueAt(0, 7).toString();

    int codigo;
    int cantidad;
    float precio;

    try {
        codigo = Integer.parseInt(codigoStr);
        cantidad = Integer.parseInt(cantidadStr);
        precio = Float.parseFloat(precioStr);
    } catch (NumberFormatException e) {
        textoError.setText("Código, cantidad o precio inválidos.");
        textoError.setForeground(Color.red);
        return;
    }

    Producto buscado = tienda.getProductoEnSeccionPorCodigo(this.codigoBuscado);
    if (buscado == null) {
        textoError.setText("Producto no encontrado.");
        textoError.setForeground(Color.red);
        return;
    }
    this.tienda.buscarSeccion(nuevaSeccion).cambiarCodigoProducto(buscado.getCodigo(), codigo);

    // Validar sección
    if (tienda.buscarSeccion(nuevaSeccion) == null) {
        textoError.setText("La sección indicada no existe.");
        textoError.setForeground(Color.red);
        return;
    }

    try {
        // 1️⃣ Modificar atributos básicos
        buscado.setNombreProducto(nuevoNombre);
        buscado.setCandidadProducto(cantidad);
        buscado.setVendedor(nuevoVendedor);
        buscado.setPrecioCompra(precio);
        System.out.println(buscado.toString());

        // 2️⃣ Modificar atributos según tipo de producto
        if (buscado instanceof ProductoPereciblePorLote) {
            ProductoPereciblePorLote pLote = (ProductoPereciblePorLote) buscado;
            if (!fechaStr.isEmpty()) 
                pLote.setFechaVencimiento(LocalDate.parse(fechaStr, DateTimeFormatter.ofPattern("dd/MM/yyyy")));
            if (!cantidadLoteStr.isEmpty())
                pLote.setCantidadLote(Integer.parseInt(cantidadLoteStr));
        } else if (buscado instanceof ProductoPerecible) {
            ProductoPerecible p = (ProductoPerecible) buscado;
            if (!fechaStr.isEmpty())
                p.setFechaVencimiento(LocalDate.parse(fechaStr, DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        } else if (buscado instanceof ProductoPorLote) {
            ProductoPorLote pL = (ProductoPorLote) buscado;
            if (!cantidadLoteStr.isEmpty())
                pL.setCantidadLote(Integer.parseInt(cantidadLoteStr));
        }

        // 3️⃣ Cambiar sección si es diferente
        if (!this.tienda.getNombreSeccionDeProducto(buscado.getCodigo()).equals(nuevaSeccion)) {
            tienda.cambiarSeccionProducto(buscado.getCodigo(), nuevaSeccion);
        }
        

        textoError.setText("Producto modificado correctamente.");
        textoError.setForeground(new Color(0, 128, 0));

    } catch (NumberFormatException | DateTimeParseException e) {
        textoError.setText("Error: datos inválidos.");
        textoError.setForeground(Color.red);
    }
    }//GEN-LAST:event_botonModificarActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
                                         
    Producto buscado;
    try {
        buscado = this.tienda.getProductoEnSeccionPorCodigo(
            Integer.parseInt(this.inputCodigo.getText())
        );
    } catch (NumberFormatException e) {
        textoError.setText("Código inválido.");
        textoError.setForeground(Color.red);
        return;
    }

    if (buscado == null) {
        textoError.setText("El código de producto ingresado no existe.");
        textoError.setForeground(Color.red);
        return;
    }

    DefaultTableModel modelo = (DefaultTableModel) this.tablaBuscado.getModel();
    modelo.setRowCount(0); // Limpiar la tabla

    String[] fila = new String[8];

    // Columna 0: seccion
    fila[0] = this.tienda.getNombreSeccionDeProducto(buscado.getCodigo());
    // Columnas 1-5: datos básicos del producto
    fila[1] = String.valueOf(buscado.getCodigo());
    fila[2] = buscado.getNombre();
    fila[3] = String.valueOf(buscado.getCantidad());
    fila[4] = buscado.getVendedor();
    fila[5] = String.valueOf(buscado.getPrecioCompra());

    // Columnas 6-7 según tipo de producto
    if (buscado instanceof ProductoPereciblePorLote) {
        ProductoPereciblePorLote p = (ProductoPereciblePorLote) buscado;
        fila[6] = p.getFechaVencimiento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        fila[7] = String.valueOf(p.getCantidadLote());
    } else if (buscado instanceof ProductoPerecible) {
        ProductoPerecible p = (ProductoPerecible) buscado;
        fila[6] = p.getFechaVencimiento().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
        fila[7] = "";
    } else if (buscado instanceof ProductoPorLote) {
        ProductoPorLote p = (ProductoPorLote) buscado;
        fila[6] = "";
        fila[7] = String.valueOf(p.getCantidadLote());
    } else { // Producto normal
        fila[6] = "";
        fila[7] = "";
    }

    modelo.addRow(fila);
    this.codigoBuscado = Integer.parseInt(this.inputCodigo.getText());
    }//GEN-LAST:event_botonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBuscarProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Tienda tienda = new Tienda("");

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBuscarProducto(tienda).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JTextField inputCodigo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaBuscado;
    private javax.swing.JLabel textoCodigo;
    private javax.swing.JLabel textoError;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
